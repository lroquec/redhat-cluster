---
- name: Copy cluster_test.sh template to /usr/local/bin/cluster_test.sh on localhost
  delegate_to: localhost
  run_once: true
  ansible.builtin.template:
    src: cluster_test.sh.j2
    dest: /usr/local/bin/cluster_tests
    owner: root
    group: root
    mode: '0755'
  tags: cluster_test

- name: Collect and display comprehensive cluster diagnostics
  ansible.builtin.shell: |
    mkdir -p /var/log/cluster_diagnostics
    TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
    LOG_FILE="/var/log/cluster_diagnostics/post_install_$TIMESTAMP.log"

    {
      echo "===== COMPREHENSIVE CLUSTER STATUS ====="
      echo "Date: $(date)"
      echo "Hostname: $(hostname)"
      echo ""

      echo "===== PCS STATUS ====="
      pcs status
      echo ""

      echo "===== PCS STATUS NODES ====="
      pcs status nodes
      echo ""

      echo "===== PCS STATUS RESOURCES ====="
      pcs status resources
      echo ""

      echo "===== PCS STONITH STATUS ====="
      pcs stonith status
      echo ""

      echo "===== PCS CONSTRAINTS ====="
      pcs constraint
      echo ""

      echo "===== NFS MOUNTS ====="
      mount | grep nfs
      echo ""

      echo "===== NETWORK CONNECTIVITY ====="
      {% for node in infra__redhat_cluster_nodes %}
      ping -c 1 {{ node.hostname }} &>/dev/null && echo "{{ node.hostname }} is reachable" || echo "{{ node.hostname }} is NOT reachable"
      {% endfor %}
      ping -c 1 {{ infra__redhat_cluster_virtual_ip }} &>/dev/null && echo "{{ infra__redhat_cluster_virtual_ip }} is reachable" || echo "{{ infra__redhat_cluster_virtual_ip }} is NOT reachable"
      echo ""

      echo "===== WATCHDOG STATUS ====="
      systemctl status watchdog
      echo ""

      echo "===== HEARTBEAT UPDATER STATUS ====="
      systemctl status heartbeat-updater
      echo ""

      echo "===== NETWORK WATCHDOG STATUS ====="
      systemctl status network-watchdog
      echo ""

      echo "===== HEARTBEAT FILE STATUS ====="
      if [ -f /var/run/arbitrator-heartbeat ]; then
        echo "File exists: YES"
        echo "Last modified: $(stat -c '%y' /var/run/arbitrator-heartbeat)"
        echo "Permissions: $(stat -c '%a' /var/run/arbitrator-heartbeat)"
        echo "SELinux context: $(ls -Z /var/run/arbitrator-heartbeat)"
      else
        echo "File exists: NO"
      fi
      echo ""

      echo "===== SERVICE STATUS ====="
      systemctl status pcsd corosync pacemaker
      echo ""

      echo "===== PROCESS LIST (RELATED) ====="
      ps aux | grep -E 'watchdog|heart|arbitrator|pcs|pace|coro|nfs'
      echo ""
    } > "$LOG_FILE"

    echo "Diagnostics saved to $LOG_FILE"
    ls -la "$LOG_FILE"
  register: comprehensive_status
  changed_when: false
  tags: validate

- name: Display diagnostics location
  ansible.builtin.debug:
    msg: "{{ comprehensive_status.stdout_lines }}"
  tags: validate

- name: Copy post-installation monitoring script
  ansible.builtin.copy:
    src: post_install_monitor.sh
    dest: /usr/local/bin/post_install_monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags: monitor

- name: Start post-installation monitoring in background
  ansible.builtin.shell: nohup /usr/local/bin/post_install_monitor.sh > /dev/null 2>&1 &
  changed_when: false
  tags: monitor

- name: Inform about monitoring
  ansible.builtin.debug:
    msg:
      - "Post-installation monitoring started in background for 30 minutes"
      - "Logs will be written to /var/log/cluster_diagnostics/post_install_monitor.log"
      - "Detailed diagnostics about watchdog will be captured automatically every 5 minutes"
  tags: monitor
