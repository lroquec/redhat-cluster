---
- name: Create virtual IP resource
  ansible.builtin.shell: pcs resource create virtual_ip IPaddr2 ip={{ infra__redhat_cluster_virtual_ip }} cidr_netmask={{ infra__redhat_cluster_virtual_ip_cidr }} nic={{ infra__redhat_cluster_virtual_ip_interface }} op monitor interval={{ infra__redhat_cluster_ip_monitor_interval }} --disabled
  run_once: true
  delegate_to: "{{ infra__redhat_cluster_nodes[0].hostname }}"
  register: create_ip
  failed_when: create_ip.rc != 0 and "already exists" not in create_ip.stderr
  changed_when: create_ip.rc == 0
  tags: resources

- name: Create filesystem resource
  ansible.builtin.shell: pcs resource create fs_shared Filesystem device={{ infra__redhat_cluster_nfs_server }}:{{ infra__redhat_cluster_nfs_share }} directory={{ infra__redhat_cluster_mount_point }} fstype=nfs options="noatime,sync" op monitor interval={{ infra__redhat_cluster_fs_monitor_interval }}
  run_once: true
  delegate_to: "{{ infra__redhat_cluster_nodes[0].hostname }}"
  register: create_fs
  failed_when: create_fs.rc != 0 and "already exists" not in create_fs.stderr
  changed_when: create_fs.rc == 0
  tags: resources

- name: Set order constraints
  ansible.builtin.shell: |
    pcs constraint order virtual_ip then fs_shared --force
  run_once: true
  delegate_to: "{{ infra__redhat_cluster_nodes[0].hostname }}"
  changed_when: false
  tags: constraints

- name: Set colocation constraints
  ansible.builtin.shell: |
    pcs constraint colocation add fs_shared with virtual_ip INFINITY --force
  run_once: true
  delegate_to: "{{ infra__redhat_cluster_nodes[0].hostname }}"
  changed_when: false
  tags: constraints

- name: Enable resources in cluster
  ansible.builtin.shell: pcs resource enable virtual_ip fs_shared
  run_once: true
  delegate_to: "{{ infra__redhat_cluster_nodes[0].hostname }}"
  ignore_errors: true
  tags: resources

- name: Cleanup resources
  ansible.builtin.shell: pcs resource cleanup
  run_once: true
  delegate_to: "{{ infra__redhat_cluster_nodes[0].hostname }}"
  ignore_errors: true
  tags: resources
